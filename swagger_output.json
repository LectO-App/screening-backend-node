{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [],
  "schemes": [
    "http"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/users/signIn": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Get a token for a certain user",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/signUp": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a new user",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correct sign up",
            "schema": {
              "type": "object",
              "properties": {
                "verified": {
                  "type": "boolean",
                  "example": true
                },
                "token": {
                  "type": "string",
                  "example": "token"
                }
              },
              "required": [
                "verified",
                "token"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/get": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves user data",
        "description": "Given a user token, it retrieves users data",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email sent",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Verification email sent"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/sendEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Sends a new verification email",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email sent",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Verification email sent"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/verifyEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Verify your email",
        "description": "Given an email token, it lets you verify your account",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email sent",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "string",
                  "example": "Email has been verified succesfully."
                },
                "token": {
                  "type": "string",
                  "example": "signedToken"
                }
              },
              "required": [
                "success"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/validateToken": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Validate token",
        "description": "It gives you a new token. Works like a keep alive.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email sent",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "verified": {
                  "type": "boolean",
                  "example": true
                }
              },
              "required": [
                "token",
                "verified"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/restorePasswordEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Send email for password restoration",
        "description": "Given an email, it lets you send a password restore email",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email sent",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Restore password email sent"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/restorePassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change password",
        "description": "Use an emailed token to change your password",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password changed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "string",
                  "example": "Password has been changed succesfully succesfully."
                },
                "token": {
                  "type": "string",
                  "example": "signedToken"
                }
              },
              "required": [
                "success"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/students/create": {
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Create new student",
        "description": "This lets you create a new student for a certain user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User to create",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "student": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "example": "Nombre"
                    },
                    "province": {
                      "type": "string",
                      "example": "CABA"
                    },
                    "locality": {
                      "type": "string",
                      "example": "CABA"
                    },
                    "birth": {
                      "type": "string",
                      "example": "2020-01-01"
                    },
                    "schoolType": {
                      "type": "array",
                      "example": [
                        "Privada",
                        "Publica"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "genre": {
                      "type": "array",
                      "example": [
                        "Masculino",
                        "Femenino",
                        "Otro"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSpanish": {
                      "type": "array",
                      "example": [
                        "true",
                        "false"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "schoolYear": {
                      "type": "array",
                      "example": [
                        0,
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "number"
                      }
                    },
                    "previousDiagnostic": {
                      "type": "array",
                      "example": [
                        true,
                        false
                      ],
                      "items": {
                        "type": "boolean"
                      }
                    },
                    "previousDiagnostcDetails": {
                      "type": "string",
                      "example": "Si la respuesta anterior fue true"
                    },
                    "hand": {
                      "type": "array",
                      "example": [
                        "Diestro",
                        "Zurdo"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "parentsLevel": {
                      "type": "string",
                      "example": "Universitario"
                    }
                  },
                  "required": [
                    "alias",
                    "province",
                    "locality",
                    "birth",
                    "schoolType",
                    "genre",
                    "isSpanish",
                    "schoolYear",
                    "previousDiagnostic",
                    "previousDiagnostcDetails"
                  ]
                }
              },
              "required": [
                "token",
                "student"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correcly created student",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Correctly created student"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/students/delete": {
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Deletes an existing student",
        "description": "This lets you delete a student for a certain user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User to delete",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "student": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "studentId"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "required": [
                "token",
                "student"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correcly deleted student",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Correctly deleted student"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/students/modify": {
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Modifies an existing student",
        "description": "This lets you modify a student for a certain user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User to modify",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "student": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "studentId"
                    },
                    "alias": {
                      "type": "string",
                      "example": "Nombre"
                    },
                    "province": {
                      "type": "string",
                      "example": "CABA"
                    },
                    "locality": {
                      "type": "string",
                      "example": "CABA"
                    },
                    "birth": {
                      "type": "string",
                      "example": "2020-01-01"
                    },
                    "schoolType": {
                      "type": "array",
                      "example": [
                        "Privada",
                        "Publica"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "genre": {
                      "type": "array",
                      "example": [
                        "Masculino",
                        "Femenino",
                        "Otro"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSpanish": {
                      "type": "array",
                      "example": [
                        "true",
                        "false"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "schoolYear": {
                      "type": "array",
                      "example": [
                        0,
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "number"
                      }
                    },
                    "previousDiagnostic": {
                      "type": "array",
                      "example": [
                        true,
                        false
                      ],
                      "items": {
                        "type": "boolean"
                      }
                    },
                    "previousDiagnostcDetails": {
                      "type": "string",
                      "example": "Si la respuesta anterior fue true"
                    },
                    "hand": {
                      "type": "array",
                      "example": [
                        "Diestro",
                        "Zurdo"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "parentsLevel": {
                      "type": "string",
                      "example": "Universitario"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "required": [
                "token",
                "student"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correcly updated student",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Correctly updated student"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/students/get": {
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Get a list of all students",
        "description": "This lets you get all students for a certain user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Session",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                }
              },
              "required": [
                "token"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correcly got student",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "studentId"
                  },
                  "alias": {
                    "type": "string",
                    "example": "Nombre"
                  }
                },
                "required": [
                  "id",
                  "alias"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/students/getById": {
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Get one student with its results",
        "description": "Gets the student with the list of results ids",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User to get",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "studentId": {
                  "type": "string",
                  "example": "studentId"
                }
              },
              "required": [
                "token",
                "studentId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correcly got student",
            "schema": {
              "type": "object",
              "properties": {
                "student": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "studentId"
                    },
                    "alias": {
                      "type": "string",
                      "example": "Nombre"
                    },
                    "province": {
                      "type": "string",
                      "example": "CABA"
                    },
                    "locality": {
                      "type": "string",
                      "example": "CABA"
                    },
                    "birth": {
                      "type": "string",
                      "example": "2020-01-01"
                    },
                    "schoolType": {
                      "type": "array",
                      "example": [
                        "Privada",
                        "Publica"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "genre": {
                      "type": "array",
                      "example": [
                        "Masculino",
                        "Femenino",
                        "Otro"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "isSpanish": {
                      "type": "array",
                      "example": [
                        "true",
                        "false"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "schoolYear": {
                      "type": "array",
                      "example": [
                        0,
                        1,
                        2,
                        3
                      ],
                      "items": {
                        "type": "number"
                      }
                    },
                    "previousDiagnostic": {
                      "type": "array",
                      "example": [
                        true,
                        false
                      ],
                      "items": {
                        "type": "boolean"
                      }
                    },
                    "previousDiagnostcDetails": {
                      "type": "string",
                      "example": "Si la respuesta anterior fue true"
                    },
                    "hand": {
                      "type": "array",
                      "example": [
                        "Diestro",
                        "Zurdo"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "parentsLevel": {
                      "type": "string",
                      "example": "Universitario"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "id"
                          },
                          "testType": {
                            "type": "string",
                            "example": "Dislexia"
                          },
                          "date": {
                            "type": "string",
                            "example": "dateObject"
                          },
                          "finished": {
                            "type": "boolean",
                            "example": true
                          }
                        },
                        "required": [
                          "_id",
                          "testType",
                          "date",
                          "finished"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "alias",
                    "province",
                    "locality",
                    "birth",
                    "schoolType",
                    "genre",
                    "isSpanish",
                    "schoolYear",
                    "previousDiagnostic",
                    "previousDiagnostcDetails",
                    "hand",
                    "parentsLevel",
                    "results"
                  ]
                }
              },
              "required": [
                "student"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/test/start": {
      "post": {
        "tags": [
          "Tests"
        ],
        "summary": "Start test",
        "description": "Starts a new test",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User to delete",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "student": {
                  "type": "string",
                  "example": "studentId"
                },
                "testType": {
                  "type": "array",
                  "example": [
                    "Dislexia",
                    "Discalculia"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "token",
                "student",
                "testType"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New test started",
            "schema": {
              "type": "object",
              "properties": {
                "resultId": {
                  "type": "string",
                  "example": "ID to submit answers"
                }
              },
              "required": [
                "resultId"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/test/answerQuestion": {
      "post": {
        "tags": [
          "Tests"
        ],
        "summary": "Answer Question",
        "description": "Answers a question for a certain test. You have to give a unique question name to each question, so that it is stored separately. You can answer each type of question once per test.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User to delete",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "student": {
                  "type": "string",
                  "example": "studentId"
                },
                "resultId": {
                  "type": "string",
                  "example": "resultId"
                },
                "questionName": {
                  "type": "string",
                  "example": "Question Name"
                },
                "score": {
                  "type": "number",
                  "example": 10
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "type": "string",
                      "example": "Here you can store an object with extra information for the task."
                    }
                  }
                }
              },
              "required": [
                "token",
                "student",
                "resultId",
                "questionName",
                "score",
                "answer"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Question answered."
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/test/finishTest": {
      "post": {
        "tags": [
          "Tests"
        ],
        "summary": "Finish test",
        "description": "Finishes a test after answering all questions",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User to delete",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "student": {
                  "type": "string",
                  "example": "studentId"
                },
                "resultId": {
                  "type": "string",
                  "example": "resultId"
                }
              },
              "required": [
                "token",
                "student",
                "resultId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Test finished!"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/results/getResult": {
      "post": {
        "tags": [
          "Results"
        ],
        "summary": "Gets a complete test result",
        "description": "This lets you get a complete result from a test, corresponding to a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "resultId": {
                  "type": "string",
                  "example": "resultId"
                }
              },
              "required": [
                "token",
                "resultId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correcly got test",
            "schema": {
              "type": "object",
              "properties": {
                "testType": {
                  "type": "array",
                  "example": [
                    "Dislexia",
                    "Discalculia"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "date": {
                  "type": "string",
                  "example": "Date"
                },
                "finished": {
                  "type": "boolean",
                  "example": true
                },
                "answers": {
                  "type": "object",
                  "properties": {
                    "questionName": {
                      "type": "object",
                      "properties": {
                        "score": {
                          "type": "number",
                          "example": 10
                        },
                        "answer": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "testType",
                "date",
                "finished",
                "answers"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/results/getStatistics": {
      "post": {
        "tags": [
          "Results"
        ],
        "summary": "Gets statistical data for a test",
        "description": "This lets you get the corresponding standard deviation and median for the questions of a certain test. Filters can be used.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "resultId": {
                  "type": "string",
                  "example": "resultId"
                },
                "filters": {
                  "type": "object",
                  "properties": {
                    "province": {
                      "type": "string",
                      "example": "CABA(Opcional)"
                    },
                    "locality": {
                      "type": "string",
                      "example": "CABA(Opcional)"
                    },
                    "schoolType": {
                      "type": "string",
                      "example": "Privada(Opcional)"
                    },
                    "genre": {
                      "type": "string",
                      "example": "Masculino(Opcional)"
                    },
                    "schoolYear": {
                      "type": "number",
                      "example": 0
                    },
                    "previousDiagnostic": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              },
              "required": [
                "token",
                "resultId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correctly calculated statistics",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "nombreDePregunta"
                  },
                  "desvioEstandar": {
                    "type": "number",
                    "example": 1
                  },
                  "mediana": {
                    "type": "number",
                    "example": 1
                  },
                  "cantidad": {
                    "type": "number",
                    "example": 10
                  }
                },
                "required": [
                  "_id",
                  "desvioEstandar",
                  "mediana",
                  "cantidad"
                ]
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {}
}